{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js\";\nvar __jsx = React.createElement;\nimport React, { Component, createRef } from \"react\";\nimport Video from \"./Video\";\nimport { getUserMediaContraints, CustomTrace } from \"../../config/RTCSettings\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onStartClickButton\", function () {\n      navigator.mediaDevices.getUserMedia(getUserMediaContraints).then(_this.handleGetLocalMediaStream)[\"catch\"](_this.handleErrorGetLocalMediaStream);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleGetLocalMediaStream\", function (mediaStream) {\n      _this.localVideo.current.srcObject = mediaStream;\n      _this.localStream = mediaStream;\n      CustomTrace(\"get local media stream!\");\n\n      _this.setState({\n        startButtonDisable: true,\n        callButtonDisable: false,\n        stopButtonDisable: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onClickStopButton\", function () {\n      _this.setState({\n        startButtonDisable: false,\n        stopButtonDisable: true\n      });\n\n      _this.localStream.getVideoTracks()[0].stop();\n\n      _this.localStream.getAudioTracks()[0].stop();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onClickCallButton\", function () {\n      _this.setState({\n        callButtonDisable: true\n      });\n\n      CustomTrace(\"Starting call\");\n\n      var videoTracks = _this.localStream.getVideoTracks();\n\n      var audioTracks = _this.localStream.getAudioTracks();\n\n      if (videoTracks.length > 0) {\n        CustomTrace(\"Using video device: \".concat(videoTracks[0].label, \".\"));\n      }\n\n      if (audioTracks.length > 0) {\n        CustomTrace(\"Using audio device: \".concat(audioTracks[0].label, \".\"));\n      }\n\n      var servers = null; // Allows for RTC server configuration.\n      // Create peer connections and add behavior.\n\n      var localPeerConnection = new RTCPeerConnection();\n      CustomTrace(\"Created local peer connection object localPeerConnection.\");\n      localPeerConnection.addEventListener(\"icecandidate\", handleConnection);\n      localPeerConnection.addEventListener(\"iceconnectionstatechange\", handleConnectionChange);\n      var remotePeerConnection = new RTCPeerConnection();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleErrorGetLocalMediaStream\", function (error) {\n      console.error(error);\n    });\n\n    _this.localVideo = createRef();\n    _this.localStream = createRef();\n    _this.state = {\n      callButtonDisable: true,\n      startButtonDisable: false,\n      stopButtonDisable: true\n    };\n    return _this;\n  } // 시작\n\n\n  _createClass(Container, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"videos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, __jsx(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        ref: this.localVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), __jsx(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        disabled: this.state.startButtonDisable,\n        onClick: this._onStartClickButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"\\uC2DC\\uC791 \\uBC84\\uD2BC\"), __jsx(\"button\", {\n        disabled: this.state.stopButtonDisable,\n        onClick: this._onClickStopButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"\\uC885\\uB8CC\"), __jsx(\"button\", {\n        disabled: this.state.callButtonDisable,\n        onClick: this._onClickCallButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"\\uCF5C \\uBC84\\uD2BC\")));\n    } // error handling\n\n  }]);\n\n  return Container;\n}(Component);\n\nexport default Container;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js"],"names":["React","Component","createRef","Video","getUserMediaContraints","CustomTrace","Container","props","navigator","mediaDevices","getUserMedia","then","handleGetLocalMediaStream","handleErrorGetLocalMediaStream","mediaStream","localVideo","current","srcObject","localStream","setState","startButtonDisable","callButtonDisable","stopButtonDisable","getVideoTracks","stop","getAudioTracks","videoTracks","audioTracks","length","label","servers","localPeerConnection","RTCPeerConnection","addEventListener","handleConnection","handleConnectionChange","remotePeerConnection","error","console","state","_onStartClickButton","_onClickStopButton","_onClickCallButton"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport Video from \"./Video\";\nimport { getUserMediaContraints, CustomTrace } from \"../../config/RTCSettings\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n\n    this.localVideo = createRef();\n    this.localStream = createRef();\n\n    this.state = {\n      callButtonDisable: true,\n      startButtonDisable: false,\n      stopButtonDisable: true\n    };\n  }\n  // 시작\n  _onStartClickButton = () => {\n    navigator.mediaDevices\n      .getUserMedia(getUserMediaContraints)\n      .then(this.handleGetLocalMediaStream)\n      .catch(this.handleErrorGetLocalMediaStream);\n  };\n\n  handleGetLocalMediaStream = mediaStream => {\n    this.localVideo.current.srcObject = mediaStream;\n    this.localStream = mediaStream;\n\n    CustomTrace(\"get local media stream!\");\n    this.setState({\n      startButtonDisable: true,\n      callButtonDisable: false,\n      stopButtonDisable: false\n    });\n  };\n\n  _onClickStopButton = () => {\n    this.setState({\n      startButtonDisable: false,\n      stopButtonDisable: true\n    });\n    this.localStream.getVideoTracks()[0].stop();\n    this.localStream.getAudioTracks()[0].stop();\n  };\n\n  // 콜 버튼 눌렀을 때\n  _onClickCallButton = () => {\n    this.setState({ callButtonDisable: true });\n\n    CustomTrace(\"Starting call\");\n    const videoTracks = this.localStream.getVideoTracks();\n    const audioTracks = this.localStream.getAudioTracks();\n\n    if (videoTracks.length > 0) {\n      CustomTrace(`Using video device: ${videoTracks[0].label}.`);\n    }\n    if (audioTracks.length > 0) {\n      CustomTrace(`Using audio device: ${audioTracks[0].label}.`);\n    }\n\n    const servers = null; // Allows for RTC server configuration.\n\n    // Create peer connections and add behavior.\n    let localPeerConnection = new RTCPeerConnection();\n    CustomTrace(\"Created local peer connection object localPeerConnection.\");\n\n    localPeerConnection.addEventListener(\"icecandidate\", handleConnection);\n    localPeerConnection.addEventListener(\n      \"iceconnectionstatechange\",\n      handleConnectionChange\n    );\n\n    let remotePeerConnection = new RTCPeerConnection();\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"videos\">\n          <video autoPlay playsInline ref={this.localVideo} />\n          <video autoPlay playsInline />\n        </div>\n        <div className=\"buttons\">\n          <button\n            disabled={this.state.startButtonDisable}\n            onClick={this._onStartClickButton}\n          >\n            시작 버튼\n          </button>\n          <button\n            disabled={this.state.stopButtonDisable}\n            onClick={this._onClickStopButton}\n          >\n            종료\n          </button>\n          <button\n            disabled={this.state.callButtonDisable}\n            onClick={this._onClickCallButton}\n          >\n            콜 버튼\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // error handling\n  handleErrorGetLocalMediaStream = error => {\n    console.error(error);\n  };\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}