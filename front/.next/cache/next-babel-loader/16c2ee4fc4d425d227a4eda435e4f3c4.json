{"ast":null,"code":"var _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createRef } from \"react\";\nimport { getUserMediaContraints, CustomTrace } from \"../../config/RTCSettings\";\n\nclass LocalVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleLocalMediaStreamError\", error => {\n      console.error(error);\n    });\n\n    _defineProperty(this, \"getLocalMediaStream\", mediaStream => {\n      this.localVideo.current.srcObject = mediaStream;\n      this.localStream = mediaStream;\n      CustomTrace(\"start receiving local media stream!\");\n      this.props.onChangeCallButtonDisable(false);\n      this.props.onChangeStartButtonDisable(true);\n    });\n\n    _defineProperty(this, \"_onOpenCamera\", () => {\n      navigator.mediaDevices.getUserMedia(getUserMediaContraints).then(getLocalMediaStream).catch(handleLocalMediaStreamError);\n    });\n\n    this.localVideo = createRef(); // video tag ref\n\n    this.localStream = createRef(); // local stream referencing variable\n\n    this.state = {};\n  } // handle error\n\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"video\", {\n      autoPlay: true,\n      playsInline: true,\n      ref: this.localVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      disabled: this.props.startButtonDisable,\n      onClick: this._onOpenCamera,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"\\uCE74\\uBA54\\uB77C \\uC624\\uD508\"));\n  }\n\n}\n\nexport default LocalVideo;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js"],"names":["React","Component","createRef","getUserMediaContraints","CustomTrace","LocalVideo","constructor","props","error","console","mediaStream","localVideo","current","srcObject","localStream","onChangeCallButtonDisable","onChangeStartButtonDisable","navigator","mediaDevices","getUserMedia","then","getLocalMediaStream","catch","handleLocalMediaStreamError","state","render","startButtonDisable","_onOpenCamera"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,sBAAT,EAAiCC,WAAjC,QAAoD,0BAApD;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AACjCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,yDASWC,KAAK,IAAI;AACrCC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAXkB;;AAAA,iDAcGE,WAAW,IAAI;AACnC,WAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,SAAxB,GAAoCH,WAApC;AACA,WAAKI,WAAL,GAAmBJ,WAAnB;AAEAN,MAAAA,WAAW,CAAC,qCAAD,CAAX;AACA,WAAKG,KAAL,CAAWQ,yBAAX,CAAqC,KAArC;AACA,WAAKR,KAAL,CAAWS,0BAAX,CAAsC,IAAtC;AACD,KArBkB;;AAAA,2CAuBH,MAAM;AACpBC,MAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgBhB,sBADhB,EAEGiB,IAFH,CAEQC,mBAFR,EAGGC,KAHH,CAGSC,2BAHT;AAID,KA5BkB;;AAGjB,SAAKZ,UAAL,GAAkBT,SAAS,EAA3B,CAHiB,CAGc;;AAC/B,SAAKY,WAAL,GAAmBZ,SAAS,EAA5B,CAJiB,CAIe;;AAChC,SAAKsB,KAAL,GAAa,EAAb;AACD,GAPgC,CASjC;;;AAsBAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,WAAW,MAA3B;AAA4B,MAAA,GAAG,EAAE,KAAKd,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AACE,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWmB,kBADvB;AAEE,MAAA,OAAO,EAAE,KAAKC,aAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFF,CADF;AAWD;;AA3CgC;;AA8CnC,eAAetB,UAAf","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { getUserMediaContraints, CustomTrace } from \"../../config/RTCSettings\";\n\nclass LocalVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.localVideo = createRef(); // video tag ref\n    this.localStream = createRef(); // local stream referencing variable\n    this.state = {};\n  }\n\n  // handle error\n  handleLocalMediaStreamError = error => {\n    console.error(error);\n  };\n\n  // handle get user media stream\n  getLocalMediaStream = mediaStream => {\n    this.localVideo.current.srcObject = mediaStream;\n    this.localStream = mediaStream;\n\n    CustomTrace(\"start receiving local media stream!\");\n    this.props.onChangeCallButtonDisable(false);\n    this.props.onChangeStartButtonDisable(true);\n  };\n\n  _onOpenCamera = () => {\n    navigator.mediaDevices\n      .getUserMedia(getUserMediaContraints)\n      .then(getLocalMediaStream)\n      .catch(handleLocalMediaStreamError);\n  };\n\n  render() {\n    return (\n      <div>\n        <video autoPlay playsInline ref={this.localVideo} />\n        <button\n          disabled={this.props.startButtonDisable}\n          onClick={this._onOpenCamera}\n        >\n          카메라 오픈\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default LocalVideo;\n"]},"metadata":{},"sourceType":"module"}