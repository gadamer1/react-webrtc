{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js\";\nvar __jsx = React.createElement;\nimport React, { Component, createRef, PureComponent } from \"react\";\nimport io from \"socket.io-client\";\n\nvar Video =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Video, _PureComponent);\n\n  function Video(props) {\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Video).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onOfferButton\", function () {\n      console.log(\"Offer\"); // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n      // initiates the creation of SDP\n\n      _this.pc.createOffer({\n        offerToReceiveVideo: 1\n      }).then(function (sdp) {\n        // console.log(JSON.stringify(sdp))\n        // set offer sdp as local description\n        _this.pc.setLocalDescription(sdp);\n\n        _this.sendToPeer(\"offerOrAnswer\", sdp);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onAnswerButton\", function () {\n      console.log(\"Answer\");\n\n      _this.pc.createAnswer({\n        offerToReceiveVideo: 1\n      }).then(function (sdp) {\n        // console.log(JSON.stringify(sdp))\n        // set answer sdp as local description\n        _this.pc.setLocalDescription(sdp);\n\n        _this.sendToPeer(\"offerOrAnswer\", sdp);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sendToPeer\", function (messageType, payload) {\n      _this.socket.emit(messageType, {\n        socketID: _this.socket.id,\n        payload: payload\n      });\n    });\n\n    _this.state = {};\n    _this.localVideo = createRef();\n    _this.remoteVideo = createRef();\n    _this.textref = createRef();\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Older browsers might not implement mediaDevices at all, so we set an empty object first\n      if (navigator.mediaDevices === undefined) {\n        navigator.mediaDevices = {};\n      } // Some browsers partially implement mediaDevices. We can't just assign an object\n      // with getUserMedia as it would overwrite existing properties.\n      // Here, we will just add the getUserMedia property if it's missing.\n\n\n      if (navigator.mediaDevices.getUserMedia === undefined) {\n        navigator.mediaDevices.getUserMedia = function (constraints) {\n          // First get ahold of the legacy getUserMedia, if present\n          var getUserMedia = navigator.webkitGetUserMedia || navigator.mozGetUserMedia; // Some browsers just don't implement it - return a rejected promise with an error\n          // to keep a consistent interface\n\n          if (!getUserMedia) {\n            return _Promise.reject(new Error(\"getUserMedia is not implemented in this browser\"));\n          } // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n\n\n          return new _Promise(function (resolve, reject) {\n            getUserMedia.call(navigator, constraints, resolve, reject);\n          });\n        };\n      }\n\n      this.socket = io(\"https://f0eb8df0.ngrok.io/:8080/webrtcPeer\", {\n        path: \"/webrtc\"\n      });\n      this.socket.on(\"connection-success\", function (success) {\n        console.log(success);\n      });\n      this.socket.on(\"offerOrAnswer\", function (sdp) {\n        _this2.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n\n        _this2.textref.value = _JSON$stringify(sdp);\n      });\n      this.socket.on(\"candidate\", function (candidate) {\n        _this2.pc.addIceCandidate(new RTCIceCandidate(candidate));\n      });\n      var pc_config = {\n        urls: \"stun:stun.l.google.com:19302\"\n      };\n      this.pc = new RTCPeerConnection(pc_config);\n\n      this.pc.onicecandidate = function (e) {\n        if (e.candidate) {\n          _this2.socket.emit(\"candidate\", {\n            socketID: _this2.socket.id,\n            payload: e.candidate\n          });\n        }\n      };\n\n      this.pc.onconnectionstatechange = function (e) {\n        console.log(\"onconnectionstatechange\", e);\n      };\n\n      this.inboundStream = null;\n\n      this.pc.ontrack = function (e) {\n        console.log(\"ontrack\", e);\n\n        if (e.streams && e.streams[0]) {\n          _this2.remoteVideo.current.srcObject = e.streams[0];\n        } else {\n          if (!_this2.inboundStream) {\n            _this2.inboundStream = new MediaStream();\n            _this2.remoteVideo.current.srcObject = _this2.inboundStream;\n          }\n\n          _this2.inboundStream.addTrack(e.track);\n        }\n      };\n\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (mediaStream) {\n        _this2.localVideo.current.srcObject = mediaStream;\n        mediaStream.getTracks().reduce(function (track) {\n          _this2.pc.addTrack(track);\n\n          console.log(track);\n        });\n      })[\"catch\"](function (err) {\n        return console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, __jsx(\"video\", {\n        style: {\n          width: 100,\n          height: 100,\n          backgroundColor: \"black\"\n        },\n        ref: this.localVideo,\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), __jsx(\"video\", {\n        style: {\n          width: 100,\n          height: 100,\n          marginLeft: 10,\n          backgroundColor: \"black\"\n        },\n        ref: this.remoteVideo,\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this._onOfferButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"offer button\"), __jsx(\"button\", {\n        onClick: this._onAnswerButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"answer button\"), __jsx(\"textarea\", {\n        style: {\n          width: 450,\n          height: 40\n        },\n        ref: function ref(_ref) {\n          _this3.textref = _ref;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Video;\n}(PureComponent);\n\nexport default Video;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js"],"names":["React","Component","createRef","PureComponent","io","Video","props","console","log","pc","createOffer","offerToReceiveVideo","then","sdp","setLocalDescription","sendToPeer","createAnswer","messageType","payload","socket","emit","socketID","id","state","localVideo","remoteVideo","textref","navigator","mediaDevices","undefined","getUserMedia","constraints","webkitGetUserMedia","mozGetUserMedia","reject","Error","resolve","call","path","on","success","setRemoteDescription","RTCSessionDescription","value","candidate","addIceCandidate","RTCIceCandidate","pc_config","urls","RTCPeerConnection","onicecandidate","e","onconnectionstatechange","inboundStream","ontrack","streams","current","srcObject","MediaStream","addTrack","track","video","audio","mediaStream","getTracks","reduce","err","error","width","height","backgroundColor","marginLeft","_onOfferButton","_onAnswerButton","ref"],"mappings":"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","sourcesContent":["import React, { Component, createRef, PureComponent } from \"react\";\nimport io from \"socket.io-client\";\n\nclass Video extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.localVideo = createRef();\n    this.remoteVideo = createRef();\n    this.textref = createRef();\n  }\n\n  componentDidMount() {\n    // Older browsers might not implement mediaDevices at all, so we set an empty object first\n    if (navigator.mediaDevices === undefined) {\n      navigator.mediaDevices = {};\n    }\n\n    // Some browsers partially implement mediaDevices. We can't just assign an object\n    // with getUserMedia as it would overwrite existing properties.\n    // Here, we will just add the getUserMedia property if it's missing.\n    if (navigator.mediaDevices.getUserMedia === undefined) {\n      navigator.mediaDevices.getUserMedia = function(constraints) {\n        // First get ahold of the legacy getUserMedia, if present\n        var getUserMedia =\n          navigator.webkitGetUserMedia || navigator.mozGetUserMedia;\n\n        // Some browsers just don't implement it - return a rejected promise with an error\n        // to keep a consistent interface\n        if (!getUserMedia) {\n          return Promise.reject(\n            new Error(\"getUserMedia is not implemented in this browser\")\n          );\n        }\n\n        // Otherwise, wrap the call to the old navigator.getUserMedia with a Promise\n        return new Promise(function(resolve, reject) {\n          getUserMedia.call(navigator, constraints, resolve, reject);\n        });\n      };\n    }\n    this.socket = io(\"https://f0eb8df0.ngrok.io/:8080/webrtcPeer\", {\n      path: \"/webrtc\"\n    });\n\n    this.socket.on(\"connection-success\", success => {\n      console.log(success);\n    });\n\n    this.socket.on(\"offerOrAnswer\", sdp => {\n      this.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n      this.textref.value = JSON.stringify(sdp);\n    });\n\n    this.socket.on(\"candidate\", candidate => {\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n\n    const pc_config = {\n      urls: \"stun:stun.l.google.com:19302\"\n    };\n\n    this.pc = new RTCPeerConnection(pc_config);\n    this.pc.onicecandidate = e => {\n      if (e.candidate) {\n        this.socket.emit(\"candidate\", {\n          socketID: this.socket.id,\n          payload: e.candidate\n        });\n      }\n    };\n    this.pc.onconnectionstatechange = e => {\n      console.log(\"onconnectionstatechange\", e);\n    };\n    this.inboundStream = null;\n    this.pc.ontrack = e => {\n      console.log(\"ontrack\", e);\n      if (e.streams && e.streams[0]) {\n        this.remoteVideo.current.srcObject = e.streams[0];\n      } else {\n        if (!this.inboundStream) {\n          this.inboundStream = new MediaStream();\n          this.remoteVideo.current.srcObject = this.inboundStream;\n        }\n        this.inboundStream.addTrack(e.track);\n      }\n    };\n\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true\n      })\n      .then(mediaStream => {\n        this.localVideo.current.srcObject = mediaStream;\n        mediaStream.getTracks().reduce(track => {\n          this.pc.addTrack(track);\n          console.log(track);\n        });\n      })\n      .catch(err => console.error(err));\n  }\n\n  _onOfferButton = () => {\n    console.log(\"Offer\");\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer\n    // initiates the creation of SDP\n    this.pc.createOffer({ offerToReceiveVideo: 1 }).then(sdp => {\n      // console.log(JSON.stringify(sdp))\n\n      // set offer sdp as local description\n      this.pc.setLocalDescription(sdp);\n\n      this.sendToPeer(\"offerOrAnswer\", sdp);\n    });\n  };\n  _onAnswerButton = () => {\n    console.log(\"Answer\");\n    this.pc.createAnswer({ offerToReceiveVideo: 1 }).then(sdp => {\n      // console.log(JSON.stringify(sdp))\n\n      // set answer sdp as local description\n      this.pc.setLocalDescription(sdp);\n\n      this.sendToPeer(\"offerOrAnswer\", sdp);\n    });\n  };\n  sendToPeer = (messageType, payload) => {\n    this.socket.emit(messageType, {\n      socketID: this.socket.id,\n      payload\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <video\n          style={{ width: 100, height: 100, backgroundColor: \"black\" }}\n          ref={this.localVideo}\n          autoPlay\n          playsInline\n        />\n        <video\n          style={{\n            width: 100,\n            height: 100,\n            marginLeft: 10,\n            backgroundColor: \"black\"\n          }}\n          ref={this.remoteVideo}\n          autoPlay\n          playsInline\n        />\n        <button onClick={this._onOfferButton}>offer button</button>\n        <button onClick={this._onAnswerButton}>answer button</button>\n        <textarea\n          style={{ width: 450, height: 40 }}\n          ref={ref => {\n            this.textref = ref;\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}