{"ast":null,"code":"var _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createRef } from \"react\";\nimport Video from \"./Video\";\nimport { getUserMediaContraints, CustomTrace } from \"../../config/RTCSettings\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_onStartClickButton\", () => {\n      navigator.mediaDevices.getUserMedia(getUserMediaContraints).then(this.handleGetLocalMediaStream).catch(this.handleErrorGetLocalMediaStream);\n    });\n\n    _defineProperty(this, \"handleGetLocalMediaStream\", mediaStream => {\n      this.localVideo.current.srcObject = mediaStream;\n      this.localStream = mediaStream;\n      CustomTrace(\"get local media stream!\");\n      this.setState({\n        startButtonDisable: true,\n        callButtonDisable: false,\n        stopButtonDisable: false\n      });\n    });\n\n    _defineProperty(this, \"_onClickStopButton\", () => {\n      this.setState({\n        startButtonDisable: false,\n        stopButtonDisable: true\n      });\n      this.localStream.getVideoTracks()[0].stop();\n      this.localStream.getAudioTracks()[0].stop();\n    });\n\n    _defineProperty(this, \"_onClickCallButton\", () => {\n      this.setState({\n        callButtonDisable: true\n      });\n      CustomTrace(\"Starting call\");\n      const videoTracks = this.localStream.getVideoTracks();\n      const audioTracks = this.localStream.getAudioTracks();\n\n      if (videoTracks.length > 0) {\n        CustomTrace(`Using video device: ${videoTracks[0].label}.`);\n      }\n\n      if (audioTracks.length > 0) {\n        CustomTrace(`Using audio device: ${audioTracks[0].label}.`);\n      }\n\n      const servers = null; // Allows for RTC server configuration.\n      // Create peer connections and add behavior.\n\n      let localPeerConnection = new RTCPeerConnection();\n      CustomTrace(\"Created local peer connection object localPeerConnection.\");\n      localPeerConnection.addEventListener(\"icecandidate\", handleConnection);\n      localPeerConnection.addEventListener(\"iceconnectionstatechange\", handleConnectionChange);\n      let remotePeerConnection = new RTCPeerConnection();\n      CustomTrace(\"Created remote peer connection object remotePeerConnection.\");\n      remotePeerConnection.addEventListener(\"icecandidate\", handleConnection);\n      remotePeerConnection.addEventListener(\"iceconnectionstatechange\", handleConnectionChange); // Add local stream to connection and create offer to connect.\n\n      localPeerConnection.addStream(localStream);\n      trace(\"Added local stream to localPeerConnection.\");\n      trace(\"localPeerConnection createOffer start.\");\n      localPeerConnection.createOffer(offerOptions).then(createdOffer).catch(setSessionDescriptionError);\n    });\n\n    _defineProperty(this, \"handleErrorGetLocalMediaStream\", error => {\n      console.error(error);\n    });\n\n    this.localVideo = createRef();\n    this.localStream = createRef();\n    this.state = {\n      callButtonDisable: true,\n      startButtonDisable: false,\n      stopButtonDisable: true\n    };\n  } // 시작\n\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"videos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(\"video\", {\n      autoPlay: true,\n      playsInline: true,\n      ref: this.localVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), __jsx(\"video\", {\n      autoPlay: true,\n      playsInline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), __jsx(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      disabled: this.state.startButtonDisable,\n      onClick: this._onStartClickButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"\\uC2DC\\uC791 \\uBC84\\uD2BC\"), __jsx(\"button\", {\n      disabled: this.state.stopButtonDisable,\n      onClick: this._onClickStopButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"\\uC885\\uB8CC\"), __jsx(\"button\", {\n      disabled: this.state.callButtonDisable,\n      onClick: this._onClickCallButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"\\uCF5C \\uBC84\\uD2BC\")));\n  } // error handling\n\n\n}\n\nexport default Container;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js"],"names":["React","Component","createRef","Video","getUserMediaContraints","CustomTrace","Container","constructor","props","navigator","mediaDevices","getUserMedia","then","handleGetLocalMediaStream","catch","handleErrorGetLocalMediaStream","mediaStream","localVideo","current","srcObject","localStream","setState","startButtonDisable","callButtonDisable","stopButtonDisable","getVideoTracks","stop","getAudioTracks","videoTracks","audioTracks","length","label","servers","localPeerConnection","RTCPeerConnection","addEventListener","handleConnection","handleConnectionChange","remotePeerConnection","addStream","trace","createOffer","offerOptions","createdOffer","setSessionDescriptionError","error","console","state","render","_onStartClickButton","_onClickStopButton","_onClickCallButton"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport Video from \"./Video\";\nimport { getUserMediaContraints, CustomTrace } from \"../../config/RTCSettings\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n\n    this.localVideo = createRef();\n    this.localStream = createRef();\n\n    this.state = {\n      callButtonDisable: true,\n      startButtonDisable: false,\n      stopButtonDisable: true\n    };\n  }\n  // 시작\n  _onStartClickButton = () => {\n    navigator.mediaDevices\n      .getUserMedia(getUserMediaContraints)\n      .then(this.handleGetLocalMediaStream)\n      .catch(this.handleErrorGetLocalMediaStream);\n  };\n\n  handleGetLocalMediaStream = mediaStream => {\n    this.localVideo.current.srcObject = mediaStream;\n    this.localStream = mediaStream;\n\n    CustomTrace(\"get local media stream!\");\n    this.setState({\n      startButtonDisable: true,\n      callButtonDisable: false,\n      stopButtonDisable: false\n    });\n  };\n\n  _onClickStopButton = () => {\n    this.setState({\n      startButtonDisable: false,\n      stopButtonDisable: true\n    });\n    this.localStream.getVideoTracks()[0].stop();\n    this.localStream.getAudioTracks()[0].stop();\n  };\n\n  // 콜 버튼 눌렀을 때\n  _onClickCallButton = () => {\n    this.setState({ callButtonDisable: true });\n\n    CustomTrace(\"Starting call\");\n    const videoTracks = this.localStream.getVideoTracks();\n    const audioTracks = this.localStream.getAudioTracks();\n\n    if (videoTracks.length > 0) {\n      CustomTrace(`Using video device: ${videoTracks[0].label}.`);\n    }\n    if (audioTracks.length > 0) {\n      CustomTrace(`Using audio device: ${audioTracks[0].label}.`);\n    }\n\n    const servers = null; // Allows for RTC server configuration.\n\n    // Create peer connections and add behavior.\n    let localPeerConnection = new RTCPeerConnection();\n    CustomTrace(\"Created local peer connection object localPeerConnection.\");\n\n    localPeerConnection.addEventListener(\"icecandidate\", handleConnection);\n    localPeerConnection.addEventListener(\n      \"iceconnectionstatechange\",\n      handleConnectionChange\n    );\n\n    let remotePeerConnection = new RTCPeerConnection();\n    CustomTrace(\"Created remote peer connection object remotePeerConnection.\");\n\n    remotePeerConnection.addEventListener(\"icecandidate\", handleConnection);\n    remotePeerConnection.addEventListener(\n      \"iceconnectionstatechange\",\n      handleConnectionChange\n    );\n\n    // Add local stream to connection and create offer to connect.\n    localPeerConnection.addStream(localStream);\n    trace(\"Added local stream to localPeerConnection.\");\n\n    trace(\"localPeerConnection createOffer start.\");\n    localPeerConnection\n      .createOffer(offerOptions)\n      .then(createdOffer)\n      .catch(setSessionDescriptionError);\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"videos\">\n          <video autoPlay playsInline ref={this.localVideo} />\n          <video autoPlay playsInline />\n        </div>\n        <div className=\"buttons\">\n          <button\n            disabled={this.state.startButtonDisable}\n            onClick={this._onStartClickButton}\n          >\n            시작 버튼\n          </button>\n          <button\n            disabled={this.state.stopButtonDisable}\n            onClick={this._onClickStopButton}\n          >\n            종료\n          </button>\n          <button\n            disabled={this.state.callButtonDisable}\n            onClick={this._onClickCallButton}\n          >\n            콜 버튼\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // error handling\n  handleErrorGetLocalMediaStream = error => {\n    console.error(error);\n  };\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}