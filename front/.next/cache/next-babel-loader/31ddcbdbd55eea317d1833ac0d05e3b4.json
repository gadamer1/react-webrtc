{"ast":null,"code":"var _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { createRef, Component } from \"react\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"mediaStreamConstraints\", {\n      video: true,\n      audio: true\n    });\n\n    _defineProperty(this, \"gotLocalMediaStream\", mediaStream => {\n      this.localStream = mediaStream;\n      this.videoRef.current.srcObject = mediaStream;\n    });\n\n    _defineProperty(this, \"onClickButton\", () => {\n      navigator.mediaDevices.getUserMedia(this.mediaStreamConstraints).then(this.gotLocalMediaStream).catch(this.handleLocalMediaStreamError);\n    });\n\n    _defineProperty(this, \"onClickStop\", () => {\n      console.log(this.localStream.getVideoTracks()[0].stop());\n    });\n\n    this.videoRef = createRef();\n    this.localStream = createRef();\n  }\n\n  handleLocalMediaStreamError(error) {\n    console.log(\"navigator.getUserMedia error: \", error);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Realtime communication with WebRTC\"), __jsx(\"video\", {\n      autoPlay: true,\n      playsInline: true,\n      ref: this.videoRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.onClickButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"\\uCE74\\uBA54\\uB77C \\uC624\\uD508\"), __jsx(\"button\", {\n      onClick: this.onClickStop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"\\uC885\\uB8CC\"));\n  }\n\n}\n\nexport default index;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/pages/index.js"],"names":["React","createRef","Component","index","constructor","props","video","audio","mediaStream","localStream","videoRef","current","srcObject","navigator","mediaDevices","getUserMedia","mediaStreamConstraints","then","gotLocalMediaStream","catch","handleLocalMediaStreamError","console","log","getVideoTracks","stop","error","render","onClickButton","onClickStop"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAC5BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,oDAMM;AACvBC,MAAAA,KAAK,EAAE,IADgB;AAEvBC,MAAAA,KAAK,EAAE;AAFgB,KANN;;AAAA,iDAWGC,WAAW,IAAI;AACnC,WAAKC,WAAL,GAAmBD,WAAnB;AACA,WAAKE,QAAL,CAAcC,OAAd,CAAsBC,SAAtB,GAAkCJ,WAAlC;AACD,KAdkB;;AAAA,2CAoBH,MAAM;AACpBK,MAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB,KAAKC,sBADrB,EAEGC,IAFH,CAEQ,KAAKC,mBAFb,EAGGC,KAHH,CAGS,KAAKC,2BAHd;AAID,KAzBkB;;AAAA,yCA2BL,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,WAAL,CAAiBc,cAAjB,GAAkC,CAAlC,EAAqCC,IAArC,EAAZ;AACD,KA7BkB;;AAEjB,SAAKd,QAAL,GAAgBT,SAAS,EAAzB;AACA,SAAKQ,WAAL,GAAmBR,SAAS,EAA5B;AACD;;AAYDmB,EAAAA,2BAA2B,CAACK,KAAD,EAAQ;AACjCJ,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CG,KAA9C;AACD;;AAaDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,WAAW,MAA3B;AAA4B,MAAA,GAAG,EAAE,KAAKhB,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKiB,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAQD;;AAzC2B;;AA4C9B,eAAezB,KAAf","sourcesContent":["import React, { createRef, Component } from \"react\";\n\nclass index extends Component {\n  constructor(props) {\n    super(props);\n    this.videoRef = createRef();\n    this.localStream = createRef();\n  }\n\n  mediaStreamConstraints = {\n    video: true,\n    audio: true\n  };\n\n  gotLocalMediaStream = mediaStream => {\n    this.localStream = mediaStream;\n    this.videoRef.current.srcObject = mediaStream;\n  };\n\n  handleLocalMediaStreamError(error) {\n    console.log(\"navigator.getUserMedia error: \", error);\n  }\n\n  onClickButton = () => {\n    navigator.mediaDevices\n      .getUserMedia(this.mediaStreamConstraints)\n      .then(this.gotLocalMediaStream)\n      .catch(this.handleLocalMediaStreamError);\n  };\n\n  onClickStop = () => {\n    console.log(this.localStream.getVideoTracks()[0].stop());\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Realtime communication with WebRTC</h1>\n        <video autoPlay playsInline ref={this.videoRef} />\n        <button onClick={this.onClickButton}>카메라 오픈</button>\n        <button onClick={this.onClickStop}>종료</button>\n      </div>\n    );\n  }\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}