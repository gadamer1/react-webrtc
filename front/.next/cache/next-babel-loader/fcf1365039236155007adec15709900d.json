{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js\";\nvar __jsx = React.createElement;\nimport React, { Component, createRef } from \"react\";\nvar localPeerConnection;\nvar remotePeerConnection;\n\nvar Video =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Video, _Component);\n\n  function Video(props) {\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Video).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onStartVideo\", function () {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (mediaStream) {\n        _this.localVideo.current.srcObject = mediaStream;\n      })[\"catch\"](function (error) {\n        return console.error(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onCallButton\", function () {\n      localPeerConnection = new RTCPeerConnection(null);\n\n      localPeerConnection.onicecandidate = function () {};\n    });\n\n    _this.state = {};\n    _this.localVideo = createRef();\n    _this.remoteVideo = createRef();\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.pc = new RTCPeerConnection(null);\n\n      this.pc.onicecandidate = function (e) {\n        if (e.candidate) {\n          console.log(_JSON$stringify(e.candidate));\n        }\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, __jsx(\"video\", {\n        ref: this.localVideo,\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), __jsx(\"video\", {\n        ref: this.remoteVideo,\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this._onStartVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"\\uC2DC\\uC791\"), __jsx(\"button\", {\n        onClick: this._onCallButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"\\uCF5C \\uBC84\\uD2BC\"));\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nexport default Video;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js"],"names":["React","Component","createRef","localPeerConnection","remotePeerConnection","Video","props","navigator","mediaDevices","getUserMedia","video","audio","then","mediaStream","localVideo","current","srcObject","error","console","RTCPeerConnection","onicecandidate","state","remoteVideo","pc","e","candidate","log","_onStartVideo","_onCallButton"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AAEA,IAAIC,mBAAJ;AACA,IAAIC,oBAAJ;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,oEAQH,YAAM;AACpBC,MAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AACZC,QAAAA,KAAK,EAAE,IADK;AAEZC,QAAAA,KAAK,EAAE;AAFK,OADhB,EAKGC,IALH,CAKQ,UAAAC,WAAW,EAAI;AACnB,cAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,SAAxB,GAAoCH,WAApC;AACD,OAPH,WAQS,UAAAI,KAAK;AAAA,eAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAJ;AAAA,OARd;AASD,KAlBkB;;AAAA,oEAoBH,YAAM;AACpBd,MAAAA,mBAAmB,GAAG,IAAIgB,iBAAJ,CAAsB,IAAtB,CAAtB;;AACAhB,MAAAA,mBAAmB,CAACiB,cAApB,GAAqC,YAAM,CAAE,CAA7C;AACD,KAvBkB;;AAGjB,UAAKC,KAAL,GAAa,EAAb;AACA,UAAKP,UAAL,GAAkBZ,SAAS,EAA3B;AACA,UAAKoB,WAAL,GAAmBpB,SAAS,EAA5B;AALiB;AAMlB;;;;wCAmBmB;AAClB,WAAKqB,EAAL,GAAU,IAAIJ,iBAAJ,CAAsB,IAAtB,CAAV;;AACA,WAAKI,EAAL,CAAQH,cAAR,GAAyB,UAAAI,CAAC,EAAI;AAC5B,YAAIA,CAAC,CAACC,SAAN,EAAiB;AACfP,UAAAA,OAAO,CAACQ,GAAR,CAAY,gBAAeF,CAAC,CAACC,SAAjB,CAAZ;AACD;AACF,OAJD;AAKD;;;6BAEQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,GAAG,EAAE,KAAKX,UAAjB;AAA6B,QAAA,QAAQ,MAArC;AAAsC,QAAA,WAAW,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAO,QAAA,GAAG,EAAE,KAAKQ,WAAjB;AAA8B,QAAA,QAAQ,MAAtC;AAAuC,QAAA,WAAW,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,KAAKK,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAIE;AAAQ,QAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAJF,CADF;AAQD;;;;EA5CiB3B,S;;AA+CpB,eAAeI,KAAf","sourcesContent":["import React, { Component, createRef } from \"react\";\n\nlet localPeerConnection;\nlet remotePeerConnection;\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.localVideo = createRef();\n    this.remoteVideo = createRef();\n  }\n\n  _onStartVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true\n      })\n      .then(mediaStream => {\n        this.localVideo.current.srcObject = mediaStream;\n      })\n      .catch(error => console.error(error));\n  };\n\n  _onCallButton = () => {\n    localPeerConnection = new RTCPeerConnection(null);\n    localPeerConnection.onicecandidate = () => {};\n  };\n\n  componentDidMount() {\n    this.pc = new RTCPeerConnection(null);\n    this.pc.onicecandidate = e => {\n      if (e.candidate) {\n        console.log(JSON.stringify(e.candidate));\n      }\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <video ref={this.localVideo} autoPlay playsInline />\n        <video ref={this.remoteVideo} autoPlay playsInline />\n        <button onClick={this._onStartVideo}>시작</button>\n        <button onClick={this._onCallButton}>콜 버튼</button>\n      </div>\n    );\n  }\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}