{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js\";\nvar __jsx = React.createElement;\nimport React, { Component, createRef } from \"react\";\n\nvar Video =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Video, _Component);\n\n  function Video(props) {\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Video).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onStartVideo\", function () {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (mediaStream) {\n        _this.localVideo.current.srcObject = mediaStream;\n        mediaStream.getTracks(function (track) {\n          _this.pc.addTrack(track, mediaStream);\n        });\n      })[\"catch\"](function (error) {\n        return console.error(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onCallButton\", function () {\n      console.log(\"offer\");\n\n      _this.pc.createOffer({\n        offerToReceiveVideo: 1\n      }).then(function (sdp) {\n        _this.pc.setLocalDescription(sdp).then(function () {\n          return console.log(\"set local description success\");\n        })[\"catch\"](function (err) {\n          return console.error(err);\n        });\n\n        _this.pc.setRemoteDescription(sdp).then(function () {\n          return console.log(\"set local description success\");\n        })[\"catch\"](function (err) {\n          return console.error(err);\n        });\n      });\n\n      _this.pc.createAnswer({\n        offerToReceiveVideo: 1\n      }).then(function (sdp) {\n        _this.pc.setLocalDescription(sdp).then(function () {\n          console.log(\"create answer success\");\n        })[\"catch\"](function (error) {\n          console.error(error);\n        });\n      });\n    });\n\n    _this.state = {};\n    _this.localVideo = createRef();\n    _this.remoteVideo = createRef();\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.pc = new RTCPeerConnection(null); // local peerconnection\n\n      this.pc.onicecandidate = function (e) {\n        if (e.candidate) {\n          console.log(\"ice\", e);\n          var newIceCandidate = new RTCIceCandidate(e.candidate);\n\n          _this2.pc.addIceCandidate(newIceCandidate).then(function () {\n            console.log(e.target, \"add iceCandidate success\");\n          })[\"catch\"](function (error) {\n            console.error(e.target, error);\n          });\n        }\n      };\n\n      this.pc.oniceconnectionstatechange = function (e) {\n        console.log(e);\n      };\n\n      this.pc.ontrack = function (e) {\n        console.log(e);\n        _this2.remoteVideo.current.srcObject = e.streams[0];\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, __jsx(\"video\", {\n        style: {\n          backgroundColor: \"black\",\n          width: 200,\n          height: 200\n        },\n        ref: this.localVideo,\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), __jsx(\"video\", {\n        style: {\n          backgroundColor: \"black\",\n          width: 200,\n          height: 200,\n          marginLeft: 10\n        },\n        ref: this.remoteVideo,\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this._onStartVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"\\uC2DC\\uC791\"), __jsx(\"button\", {\n        onClick: this._onCallButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"\\uCF5C \\uBC84\\uD2BC\"));\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nexport default Video;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js"],"names":["React","Component","createRef","Video","props","navigator","mediaDevices","getUserMedia","video","audio","then","mediaStream","localVideo","current","srcObject","getTracks","track","pc","addTrack","error","console","log","createOffer","offerToReceiveVideo","sdp","setLocalDescription","err","setRemoteDescription","createAnswer","state","remoteVideo","RTCPeerConnection","onicecandidate","e","candidate","newIceCandidate","RTCIceCandidate","addIceCandidate","target","oniceconnectionstatechange","ontrack","streams","backgroundColor","width","height","marginLeft","_onStartVideo","_onCallButton"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.localVideo = createRef();\n    this.remoteVideo = createRef();\n  }\n\n  _onStartVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true\n      })\n      .then(mediaStream => {\n        this.localVideo.current.srcObject = mediaStream;\n        mediaStream.getTracks(track => {\n          this.pc.addTrack(track, mediaStream);\n        });\n      })\n      .catch(error => console.error(error));\n  };\n\n  _onCallButton = () => {\n    console.log(\"offer\");\n    this.pc.createOffer({ offerToReceiveVideo: 1 }).then(sdp => {\n      this.pc\n        .setLocalDescription(sdp)\n        .then(() => console.log(\"set local description success\"))\n        .catch(err => console.error(err));\n      this.pc\n        .setRemoteDescription(sdp)\n        .then(() => console.log(\"set local description success\"))\n        .catch(err => console.error(err));\n    });\n\n    this.pc.createAnswer({ offerToReceiveVideo: 1 }).then(sdp => {\n      this.pc\n        .setLocalDescription(sdp)\n        .then(() => {\n          console.log(\"create answer success\");\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    });\n  };\n\n  componentDidMount() {\n    this.pc = new RTCPeerConnection(null);\n\n    // local peerconnection\n    this.pc.onicecandidate = e => {\n      if (e.candidate) {\n        console.log(\"ice\", e);\n        const newIceCandidate = new RTCIceCandidate(e.candidate);\n        this.pc\n          .addIceCandidate(newIceCandidate)\n          .then(() => {\n            console.log(e.target, \"add iceCandidate success\");\n          })\n          .catch(error => {\n            console.error(e.target, error);\n          });\n      }\n    };\n    this.pc.oniceconnectionstatechange = e => {\n      console.log(e);\n    };\n    this.pc.ontrack = e => {\n      console.log(e);\n      this.remoteVideo.current.srcObject = e.streams[0];\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <video\n          style={{ backgroundColor: \"black\", width: 200, height: 200 }}\n          ref={this.localVideo}\n          autoPlay\n          playsInline\n        />\n        <video\n          style={{\n            backgroundColor: \"black\",\n            width: 200,\n            height: 200,\n            marginLeft: 10\n          }}\n          ref={this.remoteVideo}\n          autoPlay\n          playsInline\n        />\n        <button onClick={this._onStartVideo}>시작</button>\n        <button onClick={this._onCallButton}>콜 버튼</button>\n      </div>\n    );\n  }\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}