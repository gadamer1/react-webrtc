{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js\";\nvar __jsx = React.createElement;\nimport React, { Component, createRef } from \"react\";\nimport { getUserMediaContraints, CustomTrace, offerOptions } from \"../../config/RTCSettings\";\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onStartClickButton\", function () {\n      navigator.mediaDevices.getUserMedia(getUserMediaContraints).then(_this.handleGetLocalMediaStream)[\"catch\"](_this.handleErrorGetLocalMediaStream);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleGetLocalMediaStream\", function (mediaStream) {\n      _this.localVideo.current.srcObject = mediaStream;\n      _this.localStream = mediaStream;\n      CustomTrace(\"get local media stream!\");\n\n      _this.setState({\n        startButtonDisable: true,\n        callButtonDisable: false,\n        stopButtonDisable: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onClickStopButton\", function () {\n      _this.setState({\n        startButtonDisable: false,\n        stopButtonDisable: true\n      });\n\n      _this.localStream.getVideoTracks()[0].stop();\n\n      _this.localStream.getAudioTracks()[0].stop();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onClickCallButton\", function () {\n      _this.setState({\n        callButtonDisable: true\n      });\n\n      CustomTrace(\"Starting call\");\n\n      var videoTracks = _this.localStream.getVideoTracks();\n\n      var audioTracks = _this.localStream.getAudioTracks();\n\n      if (videoTracks.length > 0) {\n        CustomTrace(\"Using video device: \".concat(videoTracks[0].label, \".\"));\n      }\n\n      if (audioTracks.length > 0) {\n        CustomTrace(\"Using audio device: \".concat(audioTracks[0].label, \".\"));\n      }\n\n      var servers = null; // Allows for RTC server configuration.\n      // Create peer connections and add behavior.\n\n      _this.localPeerConnection = new RTCPeerConnection();\n      CustomTrace(\"Created local peer connection object localPeerConnection.\");\n\n      _this.localPeerConnection.addEventListener(\"icecandidate\", _this.handleConnection);\n\n      _this.localPeerConnection.addEventListener(\"iceconnectionstatechange\", _this.handleConnectionChange);\n\n      _this.remotePeerConnection = new RTCPeerConnection();\n      CustomTrace(\"Created remote peer connection object remotePeerConnection.\");\n\n      _this.remotePeerConnection.addEventListener(\"icecandidate\", _this.handleConnection);\n\n      _this.remotePeerConnection.addEventListener(\"iceconnectionstatechange\", _this.handleConnectionChange); // Add local stream to connection and create offer to connect.\n\n\n      _this.localPeerConnection.addStream(_this.localStream);\n\n      trace(\"Added local stream to localPeerConnection.\");\n      trace(\"localPeerConnection createOffer start.\");\n\n      _this.localPeerConnection.createOffer(offerOptions).then(_this.createdOffer)[\"catch\"](_this.setSessionDescriptionError);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleErrorGetLocalMediaStream\", function (error) {\n      console.error(error);\n    });\n\n    _this.localVideo = createRef();\n    _this.localStream = createRef();\n    _this.localPeerConnection = createRef();\n    _this.remotePeerConnection = createRef();\n    _this.state = {\n      callButtonDisable: true,\n      startButtonDisable: false,\n      stopButtonDisable: true\n    };\n    return _this;\n  } // 시작\n\n\n  _createClass(Container, [{\n    key: \"handleConnection\",\n    value: function handleConnection(event) {\n      var peerConnection = event.target;\n      var iceCandidate = event.candidate;\n\n      if (iceCandidate) {\n        var newIceCandidate = new RTCIceCandidate(iceCandidate);\n        var otherPeer = getOtherPeer(peerConnection);\n        otherPeer.addIceCandidate(newIceCandidate).then(function () {\n          handleConnectionSuccess(peerConnection);\n        })[\"catch\"](function (error) {\n          handleConnectionFailure(peerConnection, error);\n        });\n        CustomTrace(\"\".concat(getPeerName(peerConnection), \" ICE candidate:\\n\") + \"\".concat(event.candidate.candidate, \".\"));\n      }\n    } // Logs that the connection succeeded.\n\n  }, {\n    key: \"handleConnectionSuccess\",\n    value: function handleConnectionSuccess(peerConnection) {\n      trace(\"\".concat(getPeerName(peerConnection), \" addIceCandidate success.\"));\n    } // Logs that the connection failed.\n\n  }, {\n    key: \"handleConnectionFailure\",\n    value: function handleConnectionFailure(peerConnection, error) {\n      trace(\"\".concat(getPeerName(peerConnection), \" failed to add ICE Candidate:\\n\") + \"\".concat(error.toString(), \".\"));\n    } // Logs changes to the connection state.\n\n  }, {\n    key: \"handleConnectionChange\",\n    value: function handleConnectionChange(event) {\n      var peerConnection = event.target;\n      console.log(\"ICE state change event: \", event);\n      CustomTrace(\"\".concat(getPeerName(peerConnection), \" ICE state: \") + \"\".concat(peerConnection.iceConnectionState, \".\"));\n    } // Logs offer creation and sets peer connection session descriptions.\n\n  }, {\n    key: \"createdOffer\",\n    value: function createdOffer(description) {\n      CustomTrace(\"Offer from localPeerConnection:\\n\".concat(description.sdp));\n      CustomTrace(\"localPeerConnection setLocalDescription start.\");\n      localPeerConnection.setLocalDescription(description).then(function () {\n        setLocalDescriptionSuccess(localPeerConnection);\n      })[\"catch\"](setSessionDescriptionError);\n      CustomTrace(\"remotePeerConnection setRemoteDescription start.\");\n      remotePeerConnection.setRemoteDescription(description).then(function () {\n        setRemoteDescriptionSuccess(remotePeerConnection);\n      })[\"catch\"](setSessionDescriptionError);\n      CustomTrace(\"remotePeerConnection createAnswer start.\");\n      remotePeerConnection.createAnswer().then(createdAnswer)[\"catch\"](setSessionDescriptionError);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"videos\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, __jsx(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        ref: this.localVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), __jsx(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      })), __jsx(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        disabled: this.state.startButtonDisable,\n        onClick: this._onStartClickButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"\\uC2DC\\uC791 \\uBC84\\uD2BC\"), __jsx(\"button\", {\n        disabled: this.state.stopButtonDisable,\n        onClick: this._onClickStopButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"\\uC885\\uB8CC\"), __jsx(\"button\", {\n        disabled: this.state.callButtonDisable,\n        onClick: this._onClickCallButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"\\uCF5C \\uBC84\\uD2BC\")));\n    } // error handling\n\n  }]);\n\n  return Container;\n}(Component);\n\nexport default Container;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js"],"names":["React","Component","createRef","getUserMediaContraints","CustomTrace","offerOptions","Container","props","navigator","mediaDevices","getUserMedia","then","handleGetLocalMediaStream","handleErrorGetLocalMediaStream","mediaStream","localVideo","current","srcObject","localStream","setState","startButtonDisable","callButtonDisable","stopButtonDisable","getVideoTracks","stop","getAudioTracks","videoTracks","audioTracks","length","label","servers","localPeerConnection","RTCPeerConnection","addEventListener","handleConnection","handleConnectionChange","remotePeerConnection","addStream","trace","createOffer","createdOffer","setSessionDescriptionError","error","console","state","event","peerConnection","target","iceCandidate","candidate","newIceCandidate","RTCIceCandidate","otherPeer","getOtherPeer","addIceCandidate","handleConnectionSuccess","handleConnectionFailure","getPeerName","toString","log","iceConnectionState","description","sdp","setLocalDescription","setLocalDescriptionSuccess","setRemoteDescription","setRemoteDescriptionSuccess","createAnswer","createdAnswer","_onStartClickButton","_onClickStopButton","_onClickCallButton"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport {\n  getUserMediaContraints,\n  CustomTrace,\n  offerOptions\n} from \"../../config/RTCSettings\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n\n    this.localVideo = createRef();\n    this.localStream = createRef();\n    this.localPeerConnection = createRef();\n    this.remotePeerConnection = createRef();\n\n    this.state = {\n      callButtonDisable: true,\n      startButtonDisable: false,\n      stopButtonDisable: true\n    };\n  }\n  // 시작\n  _onStartClickButton = () => {\n    navigator.mediaDevices\n      .getUserMedia(getUserMediaContraints)\n      .then(this.handleGetLocalMediaStream)\n      .catch(this.handleErrorGetLocalMediaStream);\n  };\n\n  handleGetLocalMediaStream = mediaStream => {\n    this.localVideo.current.srcObject = mediaStream;\n    this.localStream = mediaStream;\n\n    CustomTrace(\"get local media stream!\");\n    this.setState({\n      startButtonDisable: true,\n      callButtonDisable: false,\n      stopButtonDisable: false\n    });\n  };\n\n  _onClickStopButton = () => {\n    this.setState({\n      startButtonDisable: false,\n      stopButtonDisable: true\n    });\n    this.localStream.getVideoTracks()[0].stop();\n    this.localStream.getAudioTracks()[0].stop();\n  };\n\n  // 콜 버튼 눌렀을 때\n  _onClickCallButton = () => {\n    this.setState({ callButtonDisable: true });\n\n    CustomTrace(\"Starting call\");\n    const videoTracks = this.localStream.getVideoTracks();\n    const audioTracks = this.localStream.getAudioTracks();\n\n    if (videoTracks.length > 0) {\n      CustomTrace(`Using video device: ${videoTracks[0].label}.`);\n    }\n    if (audioTracks.length > 0) {\n      CustomTrace(`Using audio device: ${audioTracks[0].label}.`);\n    }\n\n    const servers = null; // Allows for RTC server configuration.\n\n    // Create peer connections and add behavior.\n    this.localPeerConnection = new RTCPeerConnection();\n    CustomTrace(\"Created local peer connection object localPeerConnection.\");\n\n    this.localPeerConnection.addEventListener(\n      \"icecandidate\",\n      this.handleConnection\n    );\n    this.localPeerConnection.addEventListener(\n      \"iceconnectionstatechange\",\n      this.handleConnectionChange\n    );\n\n    this.remotePeerConnection = new RTCPeerConnection();\n    CustomTrace(\"Created remote peer connection object remotePeerConnection.\");\n\n    this.remotePeerConnection.addEventListener(\n      \"icecandidate\",\n      this.handleConnection\n    );\n    this.remotePeerConnection.addEventListener(\n      \"iceconnectionstatechange\",\n      this.handleConnectionChange\n    );\n\n    // Add local stream to connection and create offer to connect.\n    this.localPeerConnection.addStream(this.localStream);\n    trace(\"Added local stream to localPeerConnection.\");\n\n    trace(\"localPeerConnection createOffer start.\");\n    this.localPeerConnection\n      .createOffer(offerOptions)\n      .then(this.createdOffer)\n      .catch(this.setSessionDescriptionError);\n  };\n\n  handleConnection(event) {\n    const peerConnection = event.target;\n    const iceCandidate = event.candidate;\n\n    if (iceCandidate) {\n      const newIceCandidate = new RTCIceCandidate(iceCandidate);\n      const otherPeer = getOtherPeer(peerConnection);\n\n      otherPeer\n        .addIceCandidate(newIceCandidate)\n        .then(() => {\n          handleConnectionSuccess(peerConnection);\n        })\n        .catch(error => {\n          handleConnectionFailure(peerConnection, error);\n        });\n\n      CustomTrace(\n        `${getPeerName(peerConnection)} ICE candidate:\\n` +\n          `${event.candidate.candidate}.`\n      );\n    }\n  }\n  // Logs that the connection succeeded.\n  handleConnectionSuccess(peerConnection) {\n    trace(`${getPeerName(peerConnection)} addIceCandidate success.`);\n  }\n\n  // Logs that the connection failed.\n  handleConnectionFailure(peerConnection, error) {\n    trace(\n      `${getPeerName(peerConnection)} failed to add ICE Candidate:\\n` +\n        `${error.toString()}.`\n    );\n  }\n\n  // Logs changes to the connection state.\n  handleConnectionChange(event) {\n    const peerConnection = event.target;\n    console.log(\"ICE state change event: \", event);\n    CustomTrace(\n      `${getPeerName(peerConnection)} ICE state: ` +\n        `${peerConnection.iceConnectionState}.`\n    );\n  }\n\n  // Logs offer creation and sets peer connection session descriptions.\n  createdOffer(description) {\n    CustomTrace(`Offer from localPeerConnection:\\n${description.sdp}`);\n\n    CustomTrace(\"localPeerConnection setLocalDescription start.\");\n    localPeerConnection\n      .setLocalDescription(description)\n      .then(() => {\n        setLocalDescriptionSuccess(localPeerConnection);\n      })\n      .catch(setSessionDescriptionError);\n\n    CustomTrace(\"remotePeerConnection setRemoteDescription start.\");\n    remotePeerConnection\n      .setRemoteDescription(description)\n      .then(() => {\n        setRemoteDescriptionSuccess(remotePeerConnection);\n      })\n      .catch(setSessionDescriptionError);\n\n    CustomTrace(\"remotePeerConnection createAnswer start.\");\n    remotePeerConnection\n      .createAnswer()\n      .then(createdAnswer)\n      .catch(setSessionDescriptionError);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"videos\">\n          <video autoPlay playsInline ref={this.localVideo} />\n          <video autoPlay playsInline />\n        </div>\n        <div className=\"buttons\">\n          <button\n            disabled={this.state.startButtonDisable}\n            onClick={this._onStartClickButton}\n          >\n            시작 버튼\n          </button>\n          <button\n            disabled={this.state.stopButtonDisable}\n            onClick={this._onClickStopButton}\n          >\n            종료\n          </button>\n          <button\n            disabled={this.state.callButtonDisable}\n            onClick={this._onClickCallButton}\n          >\n            콜 버튼\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // error handling\n  handleErrorGetLocalMediaStream = error => {\n    console.error(error);\n  };\n}\n\nexport default Container;\n"]},"metadata":{},"sourceType":"module"}