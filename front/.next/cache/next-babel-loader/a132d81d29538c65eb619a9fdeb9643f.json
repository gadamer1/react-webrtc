{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { createRef, Component } from \"react\";\nimport \"./style.scss\";\n\nvar index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(index, _Component);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"mediaStreamConstraints\", {\n      video: true,\n      audio: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"gotLocalMediaStream\", function (mediaStream) {\n      _this.localStream = mediaStream;\n      _this.localVideo.current.srcObject = mediaStream;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickButton\", function () {\n      navigator.mediaDevices.getUserMedia(_this.mediaStreamConstraints).then(_this.gotLocalMediaStream)[\"catch\"](_this.handleLocalMediaStreamError);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickStop\", function () {\n      _this.localStream.getVideoTracks()[0].stop();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onClickCall\", function () {\n      var localPeerConnection = new RTCPeerConnection(servers);\n      localPeerConnection.addEventListener(\"icecandidate\", handleConnection);\n      localPeerConnection.addEventListener(\"iceconnectionstatechange\", handleConnectionChange);\n    });\n\n    _this.localVideo = createRef();\n    _this.remoteVideo = createRef();\n    _this.localStream = createRef();\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"handleLocalMediaStreamError\",\n    value: function handleLocalMediaStreamError(error) {\n      console.log(\"navigator.getUserMedia error: \", error);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, __jsx(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Realtime communication with WebRTC\"), __jsx(\"video\", {\n        id: \"local-video\",\n        autoPlay: true,\n        playsInline: true,\n        ref: this.localVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), __jsx(\"video\", {\n        id: \"remote-video\",\n        autoPlay: true,\n        playsInline: true,\n        ref: this.remoteVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, __jsx(\"button\", {\n        onClick: this.onClickButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"\\uB0B4 \\uCE74\\uBA54\\uB77C \\uD0A4\\uAE30\"), __jsx(\"button\", {\n        onClick: this.onClickStop,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"\\uC885\\uB8CC\"), __jsx(\"button\", {\n        onClick: this.onClickCall,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"\\uBD88\\uB7EC\\uC624\\uAE30\")));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport default index;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/pages/index.js"],"names":["React","createRef","Component","index","props","video","audio","mediaStream","localStream","localVideo","current","srcObject","navigator","mediaDevices","getUserMedia","mediaStreamConstraints","then","gotLocalMediaStream","handleLocalMediaStreamError","getVideoTracks","stop","localPeerConnection","RTCPeerConnection","servers","addEventListener","handleConnection","handleConnectionChange","remoteVideo","error","console","log","onClickButton","onClickStop","onClickCall"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAO,cAAP;;IACMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,6EAOM;AACvBC,MAAAA,KAAK,EAAE,IADgB;AAEvBC,MAAAA,KAAK,EAAE;AAFgB,KAPN;;AAAA,0EAYG,UAAAC,WAAW,EAAI;AACnC,YAAKC,WAAL,GAAmBD,WAAnB;AACA,YAAKE,UAAL,CAAgBC,OAAhB,CAAwBC,SAAxB,GAAoCJ,WAApC;AACD,KAfkB;;AAAA,oEAqBH,YAAM;AACpBK,MAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB,MAAKC,sBADrB,EAEGC,IAFH,CAEQ,MAAKC,mBAFb,WAGS,MAAKC,2BAHd;AAID,KA1BkB;;AAAA,kEA4BL,YAAM;AAClB,YAAKV,WAAL,CAAiBW,cAAjB,GAAkC,CAAlC,EAAqCC,IAArC;AACD,KA9BkB;;AAAA,kEAgCL,YAAM;AAClB,UAAIC,mBAAmB,GAAG,IAAIC,iBAAJ,CAAsBC,OAAtB,CAA1B;AACAF,MAAAA,mBAAmB,CAACG,gBAApB,CAAqC,cAArC,EAAqDC,gBAArD;AACAJ,MAAAA,mBAAmB,CAACG,gBAApB,CACE,0BADF,EAEEE,sBAFF;AAID,KAvCkB;;AAEjB,UAAKjB,UAAL,GAAkBR,SAAS,EAA3B;AACA,UAAK0B,WAAL,GAAmB1B,SAAS,EAA5B;AACA,UAAKO,WAAL,GAAmBP,SAAS,EAA5B;AAJiB;AAKlB;;;;gDAY2B2B,K,EAAO;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,KAA9C;AACD;;;6BAsBQ;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,EAEE;AAAO,QAAA,EAAE,EAAC,aAAV;AAAwB,QAAA,QAAQ,MAAhC;AAAiC,QAAA,WAAW,MAA5C;AAA6C,QAAA,GAAG,EAAE,KAAKnB,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAO,QAAA,EAAE,EAAC,cAAV;AAAyB,QAAA,QAAQ,MAAjC;AAAkC,QAAA,WAAW,MAA7C;AAA8C,QAAA,GAAG,EAAE,KAAKkB,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,OAAO,EAAE,KAAKI,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE;AAAQ,QAAA,OAAO,EAAE,KAAKC,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAHF,CAJF,CADF;AAYD;;;;EAvDiB/B,S;;AA0DpB,eAAeC,KAAf","sourcesContent":["import React, { createRef, Component } from \"react\";\nimport \"./style.scss\";\nclass index extends Component {\n  constructor(props) {\n    super(props);\n    this.localVideo = createRef();\n    this.remoteVideo = createRef();\n    this.localStream = createRef();\n  }\n\n  mediaStreamConstraints = {\n    video: true,\n    audio: true\n  };\n\n  gotLocalMediaStream = mediaStream => {\n    this.localStream = mediaStream;\n    this.localVideo.current.srcObject = mediaStream;\n  };\n\n  handleLocalMediaStreamError(error) {\n    console.log(\"navigator.getUserMedia error: \", error);\n  }\n\n  onClickButton = () => {\n    navigator.mediaDevices\n      .getUserMedia(this.mediaStreamConstraints)\n      .then(this.gotLocalMediaStream)\n      .catch(this.handleLocalMediaStreamError);\n  };\n\n  onClickStop = () => {\n    this.localStream.getVideoTracks()[0].stop();\n  };\n\n  onClickCall = () => {\n    let localPeerConnection = new RTCPeerConnection(servers);\n    localPeerConnection.addEventListener(\"icecandidate\", handleConnection);\n    localPeerConnection.addEventListener(\n      \"iceconnectionstatechange\",\n      handleConnectionChange\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Realtime communication with WebRTC</h1>\n        <video id=\"local-video\" autoPlay playsInline ref={this.localVideo} />\n        <video id=\"remote-video\" autoPlay playsInline ref={this.remoteVideo} />\n        <div className=\"button\">\n          <button onClick={this.onClickButton}>내 카메라 키기</button>\n          <button onClick={this.onClickStop}>종료</button>\n          <button onClick={this.onClickCall}>불러오기</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}