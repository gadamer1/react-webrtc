{"ast":null,"code":"var _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, createRef } from \"react\";\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"_onStartVideo\", () => {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(mediaStream => {\n        this.localVideo.current.srcObject = mediaStream;\n        this.pc.addstream = mediaStream;\n      }).catch(error => console.error(error));\n    });\n\n    _defineProperty(this, \"_onCallButton\", () => {});\n\n    this.state = {};\n    this.localVideo = createRef();\n    this.remoteVideo = createRef();\n  }\n\n  componentDidMount() {\n    this.localPeerConnection = new RTCPeerConnection(null);\n    this.remotePeerConnection = new RTCPeerConnection(null);\n\n    this.localPeerConnection.onicecandidate = e => {\n      if (e.candidate) {\n        const newIceCandidate = new RTCIceCandidate(e.candidate);\n        const otherPeer = e.target === this.localPeerConnection ? this.remotePeerConnection : this.localPeerConnection;\n      }\n    };\n\n    this.localPeerConnection.oniceconnectionstatechange = e => {\n      console.log(e);\n    };\n\n    this.localPeerConnection.onaddstream = e => {\n      this.remoteVideo.current.srcObject = e.stream;\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, __jsx(\"video\", {\n      ref: this.localVideo,\n      autoPlay: true,\n      playsInline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(\"video\", {\n      ref: this.remoteVideo,\n      autoPlay: true,\n      playsInline: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this._onStartVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\uC2DC\\uC791\"), __jsx(\"button\", {\n      onClick: this._onCallButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"\\uCF5C \\uBC84\\uD2BC\"));\n  }\n\n}\n\nexport default Video;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js"],"names":["React","Component","createRef","Video","constructor","props","navigator","mediaDevices","getUserMedia","video","audio","then","mediaStream","localVideo","current","srcObject","pc","addstream","catch","error","console","state","remoteVideo","componentDidMount","localPeerConnection","RTCPeerConnection","remotePeerConnection","onicecandidate","e","candidate","newIceCandidate","RTCIceCandidate","otherPeer","target","oniceconnectionstatechange","log","onaddstream","stream","render","_onStartVideo","_onCallButton"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAEA,MAAMC,KAAN,SAAoBF,SAApB,CAA8B;AAC5BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,2CAOH,MAAM;AACpBC,MAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AACZC,QAAAA,KAAK,EAAE,IADK;AAEZC,QAAAA,KAAK,EAAE;AAFK,OADhB,EAKGC,IALH,CAKQC,WAAW,IAAI;AACnB,aAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,SAAxB,GAAoCH,WAApC;AACA,aAAKI,EAAL,CAAQC,SAAR,GAAoBL,WAApB;AACD,OARH,EASGM,KATH,CASSC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CATlB;AAUD,KAlBkB;;AAAA,2CAoBH,MAAM,CAAE,CApBL;;AAEjB,SAAKE,KAAL,GAAa,EAAb;AACA,SAAKR,UAAL,GAAkBX,SAAS,EAA3B;AACA,SAAKoB,WAAL,GAAmBpB,SAAS,EAA5B;AACD;;AAiBDqB,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,mBAAL,GAA2B,IAAIC,iBAAJ,CAAsB,IAAtB,CAA3B;AACA,SAAKC,oBAAL,GAA4B,IAAID,iBAAJ,CAAsB,IAAtB,CAA5B;;AAEA,SAAKD,mBAAL,CAAyBG,cAAzB,GAA0CC,CAAC,IAAI;AAC7C,UAAIA,CAAC,CAACC,SAAN,EAAiB;AACf,cAAMC,eAAe,GAAG,IAAIC,eAAJ,CAAoBH,CAAC,CAACC,SAAtB,CAAxB;AACA,cAAMG,SAAS,GACbJ,CAAC,CAACK,MAAF,KAAa,KAAKT,mBAAlB,GACI,KAAKE,oBADT,GAEI,KAAKF,mBAHX;AAID;AACF,KARD;;AASA,SAAKA,mBAAL,CAAyBU,0BAAzB,GAAsDN,CAAC,IAAI;AACzDR,MAAAA,OAAO,CAACe,GAAR,CAAYP,CAAZ;AACD,KAFD;;AAGA,SAAKJ,mBAAL,CAAyBY,WAAzB,GAAuCR,CAAC,IAAI;AAC1C,WAAKN,WAAL,CAAiBR,OAAjB,CAAyBC,SAAzB,GAAqCa,CAAC,CAACS,MAAvC;AACD,KAFD;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,GAAG,EAAE,KAAKzB,UAAjB;AAA6B,MAAA,QAAQ,MAArC;AAAsC,MAAA,WAAW,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAO,MAAA,GAAG,EAAE,KAAKS,WAAjB;AAA8B,MAAA,QAAQ,MAAtC;AAAuC,MAAA,WAAW,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAE,KAAKiB,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,EAIE;AAAQ,MAAA,OAAO,EAAE,KAAKC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAJF,CADF;AAQD;;AArD2B;;AAwD9B,eAAerC,KAAf","sourcesContent":["import React, { Component, createRef } from \"react\";\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.localVideo = createRef();\n    this.remoteVideo = createRef();\n  }\n\n  _onStartVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true\n      })\n      .then(mediaStream => {\n        this.localVideo.current.srcObject = mediaStream;\n        this.pc.addstream = mediaStream;\n      })\n      .catch(error => console.error(error));\n  };\n\n  _onCallButton = () => {};\n\n  componentDidMount() {\n    this.localPeerConnection = new RTCPeerConnection(null);\n    this.remotePeerConnection = new RTCPeerConnection(null);\n\n    this.localPeerConnection.onicecandidate = e => {\n      if (e.candidate) {\n        const newIceCandidate = new RTCIceCandidate(e.candidate);\n        const otherPeer =\n          e.target === this.localPeerConnection\n            ? this.remotePeerConnection\n            : this.localPeerConnection;\n      }\n    };\n    this.localPeerConnection.oniceconnectionstatechange = e => {\n      console.log(e);\n    };\n    this.localPeerConnection.onaddstream = e => {\n      this.remoteVideo.current.srcObject = e.stream;\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <video ref={this.localVideo} autoPlay playsInline />\n        <video ref={this.remoteVideo} autoPlay playsInline />\n        <button onClick={this._onStartVideo}>시작</button>\n        <button onClick={this._onCallButton}>콜 버튼</button>\n      </div>\n    );\n  }\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}