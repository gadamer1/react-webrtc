{"ast":null,"code":"var _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\n\nconst index = () => {\n  const videoRef = useRef();\n  const mediaStreamConstraints = {\n    video: true,\n    audio: true\n  };\n\n  const gotLocalMediaStream = mediaStream => {\n    videoRef.current.srcObject = mediaStream;\n  };\n\n  function handleLocalMediaStreamError(error) {\n    console.log(\"navigator.getUserMedia error: \", error);\n  }\n\n  const onClickButton = () => {\n    navigator.mediaDevices.getUserMedia(mediaStreamConstraints).then(gotLocalMediaStream).catch(handleLocalMediaStreamError);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Realtime communication with WebRTC\"), __jsx(\"video\", {\n    autoPlay: true,\n    playsinline: true,\n    ref: videoRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: onClickButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"click\"));\n};\n\nexport default index;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/pages/index.js"],"names":["React","useRef","index","videoRef","mediaStreamConstraints","video","audio","gotLocalMediaStream","mediaStream","current","srcObject","handleLocalMediaStreamError","error","console","log","onClickButton","navigator","mediaDevices","getUserMedia","then","catch"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,QAAQ,GAAGF,MAAM,EAAvB;AAEA,QAAMG,sBAAsB,GAAG;AAC7BC,IAAAA,KAAK,EAAE,IADsB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAA/B;;AAKA,QAAMC,mBAAmB,GAAGC,WAAW,IAAI;AACzCL,IAAAA,QAAQ,CAACM,OAAT,CAAiBC,SAAjB,GAA6BF,WAA7B;AACD,GAFD;;AAIA,WAASG,2BAAT,CAAqCC,KAArC,EAA4C;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,KAA9C;AACD;;AAED,QAAMG,aAAa,GAAG,MAAM;AAC1BC,IAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgBd,sBADhB,EAEGe,IAFH,CAEQZ,mBAFR,EAGGa,KAHH,CAGST,2BAHT;AAID,GALD;;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,EAEE;AAAO,IAAA,QAAQ,MAAf;AAAgB,IAAA,WAAW,MAA3B;AAA4B,IAAA,GAAG,EAAER,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,OAAO,EAAEY,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF;AAOD,CA9BD;;AAgCA,eAAeb,KAAf","sourcesContent":["import React, { useRef } from \"react\";\n\nconst index = () => {\n  const videoRef = useRef();\n\n  const mediaStreamConstraints = {\n    video: true,\n    audio: true\n  };\n\n  const gotLocalMediaStream = mediaStream => {\n    videoRef.current.srcObject = mediaStream;\n  };\n\n  function handleLocalMediaStreamError(error) {\n    console.log(\"navigator.getUserMedia error: \", error);\n  }\n\n  const onClickButton = () => {\n    navigator.mediaDevices\n      .getUserMedia(mediaStreamConstraints)\n      .then(gotLocalMediaStream)\n      .catch(handleLocalMediaStreamError);\n  };\n\n  return (\n    <div>\n      <h1>Realtime communication with WebRTC</h1>\n      <video autoPlay playsinline ref={videoRef} />\n      <button onClick={onClickButton}>click</button>\n    </div>\n  );\n};\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}