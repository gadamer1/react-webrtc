{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js\";\nvar __jsx = React.createElement;\nimport React, { Component, createRef } from \"react\";\n\nvar Video =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Video, _Component);\n\n  function Video(props) {\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Video).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onStartVideo\", function () {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (mediaStream) {\n        _this.localVideo.current.srcObject = mediaStream;\n\n        _this.localPeerConnection.addStream(mediaStream);\n      })[\"catch\"](function (error) {\n        return console.error(error);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onCallButton\", function () {});\n\n    _this.state = {};\n    _this.localVideo = createRef();\n    _this.remoteVideo = createRef();\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.localPeerConnection = new RTCPeerConnection(null);\n      this.remotePeerConnection = new RTCPeerConnection(null);\n\n      this.localPeerConnection.onicecandidate = function (e) {\n        if (e.candidate) {\n          var newIceCandidate = new RTCIceCandidate(e.candidate);\n          var otherPeer = e.target === _this2.localPeerConnection ? _this2.remotePeerConnection : _this2.localPeerConnection;\n          otherPeer.addIceCandidate(newIceCandidate).then(function () {\n            console.log(e.target, \"add iceCandidate success\");\n          })[\"catch\"](function (error) {\n            console.error(e.target, error);\n          });\n        }\n      };\n\n      this.localPeerConnection.oniceconnectionstatechange = function (e) {\n        console.log(e);\n      };\n\n      this.localPeerConnection.onaddstream = function (e) {\n        console.log(e);\n        _this2.remoteVideo.current.srcObject = e.stream;\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, __jsx(\"video\", {\n        ref: this.localVideo,\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), __jsx(\"video\", {\n        ref: this.remoteVideo,\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this._onStartVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"\\uC2DC\\uC791\"), __jsx(\"button\", {\n        onClick: this._onCallButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\uCF5C \\uBC84\\uD2BC\"));\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nexport default Video;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js"],"names":["React","Component","createRef","Video","props","navigator","mediaDevices","getUserMedia","video","audio","then","mediaStream","localVideo","current","srcObject","localPeerConnection","addStream","error","console","state","remoteVideo","RTCPeerConnection","remotePeerConnection","onicecandidate","e","candidate","newIceCandidate","RTCIceCandidate","otherPeer","target","addIceCandidate","log","oniceconnectionstatechange","onaddstream","stream","_onStartVideo","_onCallButton"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.localVideo = createRef();\n    this.remoteVideo = createRef();\n  }\n\n  _onStartVideo = () => {\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true\n      })\n      .then(mediaStream => {\n        this.localVideo.current.srcObject = mediaStream;\n        this.localPeerConnection.addStream(mediaStream);\n      })\n      .catch(error => console.error(error));\n  };\n\n  _onCallButton = () => {};\n\n  componentDidMount() {\n    this.localPeerConnection = new RTCPeerConnection(null);\n    this.remotePeerConnection = new RTCPeerConnection(null);\n\n    this.localPeerConnection.onicecandidate = e => {\n      if (e.candidate) {\n        const newIceCandidate = new RTCIceCandidate(e.candidate);\n        const otherPeer =\n          e.target === this.localPeerConnection\n            ? this.remotePeerConnection\n            : this.localPeerConnection;\n\n        otherPeer\n          .addIceCandidate(newIceCandidate)\n          .then(() => {\n            console.log(e.target, \"add iceCandidate success\");\n          })\n          .catch(error => {\n            console.error(e.target, error);\n          });\n      }\n    };\n    this.localPeerConnection.oniceconnectionstatechange = e => {\n      console.log(e);\n    };\n    this.localPeerConnection.onaddstream = e => {\n      console.log(e);\n      this.remoteVideo.current.srcObject = e.stream;\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <video ref={this.localVideo} autoPlay playsInline />\n        <video ref={this.remoteVideo} autoPlay playsInline />\n        <button onClick={this._onStartVideo}>시작</button>\n        <button onClick={this._onCallButton}>콜 버튼</button>\n      </div>\n    );\n  }\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}