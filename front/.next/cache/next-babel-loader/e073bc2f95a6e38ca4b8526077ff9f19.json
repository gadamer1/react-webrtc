{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js\";\nvar __jsx = React.createElement;\nimport React, { Component, createRef } from \"react\";\nimport io from \"socket.io-client\";\n\nvar Video =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Video, _Component);\n\n  function Video(props) {\n    var _this;\n\n    _classCallCheck(this, Video);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Video).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"_onCallButton\", function () {});\n\n    _this.state = {};\n    _this.localVideo = createRef();\n    _this.remoteVideo = createRef();\n    return _this;\n  }\n\n  _createClass(Video, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.socket = io(\"http://localhost:8080/webrtcPeer\", {\n        path: \"/webrtc\"\n      });\n      this.socket.on(\"connection-success\", function (success) {\n        console.log(success);\n      });\n      this.socket.on(\"offerOrAnswer\", function (sdp) {\n        _this2.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n      });\n      this.socket.on(\"candidate\", function (candidate) {\n        _this2.pc.addIceCandidate(new RTCIceCandidate(candidate));\n      });\n      var pc_config = {\n        urls: \"stun:stun.l.google.com:19302\"\n      };\n      this.pc = new RTCPeerConnection(pc_config);\n\n      this.pc.onicecandidate = function (e) {\n        if (e.candidate) {\n          _this2.socket.emit(\"candidate\", {\n            socketID: _this2.socket.id,\n            payload: e.candidate\n          });\n        }\n      };\n\n      this.pc.onconnectionstatechange = function (e) {\n        console.log(\"onconnectionstatechange\", e);\n      };\n\n      this.pc.ontrack = function (e) {\n        _this2.remoteVideo.current.srcObject = e.streams[0];\n      };\n\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(function (mediaStream) {\n        _this2.localVideo.current.srcObject = mediaStream;\n        mediaStream.getTracks().reduce(function (track) {\n          _this2.pc.addTrack(track);\n        });\n      })[\"catch\"](function (err) {\n        return console.error(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, __jsx(\"video\", {\n        ref: this.localVideo,\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), __jsx(\"video\", {\n        ref: this.remoteVideo,\n        autoPlay: true,\n        playsInline: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this._onCallButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"call button\"));\n    }\n  }]);\n\n  return Video;\n}(Component);\n\nexport default Video;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/Video.js"],"names":["React","Component","createRef","io","Video","props","state","localVideo","remoteVideo","socket","path","on","success","console","log","sdp","pc","setRemoteDescription","RTCSessionDescription","candidate","addIceCandidate","RTCIceCandidate","pc_config","urls","RTCPeerConnection","onicecandidate","e","emit","socketID","id","payload","onconnectionstatechange","ontrack","current","srcObject","streams","navigator","mediaDevices","getUserMedia","video","audio","then","mediaStream","getTracks","reduce","track","addTrack","err","error","_onCallButton"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport io from \"socket.io-client\";\n\nclass Video extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n    this.localVideo = createRef();\n    this.remoteVideo = createRef();\n  }\n\n  componentDidMount() {\n    this.socket = io(\"http://localhost:8080/webrtcPeer\", {\n      path: \"/webrtc\"\n    });\n\n    this.socket.on(\"connection-success\", success => {\n      console.log(success);\n    });\n\n    this.socket.on(\"offerOrAnswer\", sdp => {\n      this.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n    });\n\n    this.socket.on(\"candidate\", candidate => {\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n    });\n\n    const pc_config = {\n      urls: \"stun:stun.l.google.com:19302\"\n    };\n\n    this.pc = new RTCPeerConnection(pc_config);\n    this.pc.onicecandidate = e => {\n      if (e.candidate) {\n        this.socket.emit(\"candidate\", {\n          socketID: this.socket.id,\n          payload: e.candidate\n        });\n      }\n    };\n    this.pc.onconnectionstatechange = e => {\n      console.log(\"onconnectionstatechange\", e);\n    };\n    this.pc.ontrack = e => {\n      this.remoteVideo.current.srcObject = e.streams[0];\n    };\n\n    navigator.mediaDevices\n      .getUserMedia({\n        video: true,\n        audio: true\n      })\n      .then(mediaStream => {\n        this.localVideo.current.srcObject = mediaStream;\n        mediaStream.getTracks().reduce(track => {\n          this.pc.addTrack(track);\n        });\n      })\n      .catch(err => console.error(err));\n  }\n\n  _onCallButton = () => {};\n\n  render() {\n    return (\n      <div>\n        <video ref={this.localVideo} autoPlay playsInline />\n        <video ref={this.remoteVideo} autoPlay playsInline />\n        <button onClick={this._onCallButton}>call button</button>\n      </div>\n    );\n  }\n}\n\nexport default Video;\n"]},"metadata":{},"sourceType":"module"}