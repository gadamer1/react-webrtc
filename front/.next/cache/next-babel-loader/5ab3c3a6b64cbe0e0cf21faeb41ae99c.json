{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/LocalVideo.js\";\nvar __jsx = React.createElement;\nimport React, { Component, createRef } from \"react\";\nimport { getUserMediaContraints, CustomTrace } from \"../../config/RTCSettings\";\n\nvar LocalVideo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LocalVideo, _Component);\n\n  function LocalVideo(props) {\n    var _this;\n\n    _classCallCheck(this, LocalVideo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalVideo).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleLocalMediaStreamError\", function (error) {\n      console.error(error);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getLocalMediaStream\", function (mediaStream) {\n      _this.localVideo.current.srcObject = mediaStream;\n      _this.localStream = mediaStream;\n      CustomTrace(\"start receiving local media stream!\");\n\n      _this.props.onChangeCallButtonDisable(false);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_onOpenCamera\", function () {\n      navigator.mediaDevices.getUserMedia(getUserMediaContraints).then(getLocalMediaStream)[\"catch\"](handleLocalMediaStreamError);\n    });\n\n    _this.localVideo = createRef(); // video tag ref\n\n    _this.localStream = createRef(); // local stream referencing variable\n\n    _this.state = {};\n    return _this;\n  } // handle error\n\n\n  _createClass(LocalVideo, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, __jsx(\"video\", {\n        autoPlay: true,\n        playsInline: true,\n        ref: this.localVideo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), __jsx(\"button\", {\n        onClick: this._onOpenCamera,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"\\uCE74\\uBA54\\uB77C \\uC624\\uD508\"));\n    }\n  }]);\n\n  return LocalVideo;\n}(Component);\n\nexport default LocalVideo;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/components/video/LocalVideo.js"],"names":["React","Component","createRef","getUserMediaContraints","CustomTrace","LocalVideo","props","error","console","mediaStream","localVideo","current","srcObject","localStream","onChangeCallButtonDisable","navigator","mediaDevices","getUserMedia","then","getLocalMediaStream","handleLocalMediaStreamError","state","_onOpenCamera"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,SAASC,sBAAT,EAAiCC,WAAjC,QAAoD,0BAApD;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,oFAAMA,KAAN;;AADiB,kFASW,UAAAC,KAAK,EAAI;AACrCC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD,KAXkB;;AAAA,0EAcG,UAAAE,WAAW,EAAI;AACnC,YAAKC,UAAL,CAAgBC,OAAhB,CAAwBC,SAAxB,GAAoCH,WAApC;AACA,YAAKI,WAAL,GAAmBJ,WAAnB;AAEAL,MAAAA,WAAW,CAAC,qCAAD,CAAX;;AACA,YAAKE,KAAL,CAAWQ,yBAAX,CAAqC,KAArC;AACD,KApBkB;;AAAA,oEAsBH,YAAM;AACpBC,MAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgBd,sBADhB,EAEGe,IAFH,CAEQC,mBAFR,WAGSC,2BAHT;AAID,KA3BkB;;AAGjB,UAAKV,UAAL,GAAkBR,SAAS,EAA3B,CAHiB,CAGc;;AAC/B,UAAKW,WAAL,GAAmBX,SAAS,EAA5B,CAJiB,CAIe;;AAChC,UAAKmB,KAAL,GAAa,EAAb;AALiB;AAMlB,G,CAED;;;;;6BAqBS;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,QAAQ,MAAf;AAAgB,QAAA,WAAW,MAA3B;AAA4B,QAAA,GAAG,EAAE,KAAKX,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAQ,QAAA,OAAO,EAAE,KAAKY,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAFF,CADF;AAMD;;;;EArCsBrB,S;;AAwCzB,eAAeI,UAAf","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { getUserMediaContraints, CustomTrace } from \"../../config/RTCSettings\";\n\nclass LocalVideo extends Component {\n  constructor(props) {\n    super(props);\n\n    this.localVideo = createRef(); // video tag ref\n    this.localStream = createRef(); // local stream referencing variable\n    this.state = {};\n  }\n\n  // handle error\n  handleLocalMediaStreamError = error => {\n    console.error(error);\n  };\n\n  // handle get user media stream\n  getLocalMediaStream = mediaStream => {\n    this.localVideo.current.srcObject = mediaStream;\n    this.localStream = mediaStream;\n\n    CustomTrace(\"start receiving local media stream!\");\n    this.props.onChangeCallButtonDisable(false);\n  };\n\n  _onOpenCamera = () => {\n    navigator.mediaDevices\n      .getUserMedia(getUserMediaContraints)\n      .then(getLocalMediaStream)\n      .catch(handleLocalMediaStreamError);\n  };\n\n  render() {\n    return (\n      <div>\n        <video autoPlay playsInline ref={this.localVideo} />\n        <button onClick={this._onOpenCamera}>카메라 오픈</button>\n      </div>\n    );\n  }\n}\n\nexport default LocalVideo;\n"]},"metadata":{},"sourceType":"module"}