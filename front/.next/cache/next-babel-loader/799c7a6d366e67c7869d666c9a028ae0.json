{"ast":null,"code":"var _jsxFileName = \"/Users/gadamer1/Documents/webdev/react-webrtc/front/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useRef, Component } from \"react\";\n\nclass index extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"mediaStreamConstraints\", {\n      video: true,\n      audio: true\n    });\n\n    _defineProperty(this, \"gotLocalMediaStream\", mediaStream => {\n      localStream = mediaStream;\n      videoRef.current.srcObject = mediaStream;\n    });\n\n    _defineProperty(this, \"onClickButton\", () => {\n      navigator.mediaDevices.getUserMedia(mediaStreamConstraints).then(gotLocalMediaStream).catch(handleLocalMediaStreamError);\n      localStream.getVideoTracks()[0].stop();\n    });\n  }\n\n  handleLocalMediaStreamError(error) {\n    console.log(\"navigator.getUserMedia error: \", error);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"Realtime communication with WebRTC\"), __jsx(\"video\", {\n      autoPlay: true,\n      playsinline: true,\n      ref: ref => this.videoRef = ref,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: onClickButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"\\uCE74\\uBA54\\uB77C \\uC624\\uD508\"));\n  }\n\n}\n\nexport default index;","map":{"version":3,"sources":["/Users/gadamer1/Documents/webdev/react-webrtc/front/pages/index.js"],"names":["React","useRef","Component","index","video","audio","mediaStream","localStream","videoRef","current","srcObject","navigator","mediaDevices","getUserMedia","mediaStreamConstraints","then","gotLocalMediaStream","catch","handleLocalMediaStreamError","getVideoTracks","stop","error","console","log","render","ref","onClickButton"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;;AAEA,MAAMC,KAAN,SAAoBD,SAApB,CAA8B;AAAA;AAAA;;AAAA,oDACH;AACvBE,MAAAA,KAAK,EAAE,IADgB;AAEvBC,MAAAA,KAAK,EAAE;AAFgB,KADG;;AAAA,iDAMNC,WAAW,IAAI;AACnCC,MAAAA,WAAW,GAAGD,WAAd;AACAE,MAAAA,QAAQ,CAACC,OAAT,CAAiBC,SAAjB,GAA6BJ,WAA7B;AACD,KAT2B;;AAAA,2CAeZ,MAAM;AACpBK,MAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgBC,sBADhB,EAEGC,IAFH,CAEQC,mBAFR,EAGGC,KAHH,CAGSC,2BAHT;AAIAX,MAAAA,WAAW,CAACY,cAAZ,GAA6B,CAA7B,EAAgCC,IAAhC;AACD,KArB2B;AAAA;;AAW5BF,EAAAA,2BAA2B,CAACG,KAAD,EAAQ;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,KAA9C;AACD;;AASDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADF,EAEE;AAAO,MAAA,QAAQ,MAAf;AAAgB,MAAA,WAAW,MAA3B;AAA4B,MAAA,GAAG,EAAEC,GAAG,IAAK,KAAKjB,QAAL,GAAgBiB,GAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAQ,MAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAHF,CADF;AAOD;;AA9B2B;;AAiC9B,eAAevB,KAAf","sourcesContent":["import React, { useRef, Component } from \"react\";\n\nclass index extends Component {\n  mediaStreamConstraints = {\n    video: true,\n    audio: true\n  };\n\n  gotLocalMediaStream = mediaStream => {\n    localStream = mediaStream;\n    videoRef.current.srcObject = mediaStream;\n  };\n\n  handleLocalMediaStreamError(error) {\n    console.log(\"navigator.getUserMedia error: \", error);\n  }\n\n  onClickButton = () => {\n    navigator.mediaDevices\n      .getUserMedia(mediaStreamConstraints)\n      .then(gotLocalMediaStream)\n      .catch(handleLocalMediaStreamError);\n    localStream.getVideoTracks()[0].stop();\n  };\n  render() {\n    return (\n      <div>\n        <h1>Realtime communication with WebRTC</h1>\n        <video autoPlay playsinline ref={ref => (this.videoRef = ref)} />\n        <button onClick={onClickButton}>카메라 오픈</button>\n      </div>\n    );\n  }\n}\n\nexport default index;\n"]},"metadata":{},"sourceType":"module"}